require "yaml"

options = File.open("config/vagrant.yaml").read
options = YAML.load(options)

extra_disk_size_gb = 50
extra_disk_image = ".vagrant/extra_disk_image.vdi"

hostname = File.basename(Dir.getwd)

Vagrant.configure(2) do |config|
    config.vm.box = "bento/ubuntu-14.04"
    
    config.vm.network :forwarded_port, guest: 22, host: options["ports"]["ssh"], id: "ssh"
    config.vm.network "public_network", type: "dhcp", :bridge => "en0: Ethernet 1", :mac => options["mac"]
    
    config.vm.synced_folder ".", "/vagrant", disabled: true
    config.vm.synced_folder "../provisioning", "/provisioning", :mount_options => ["ro"]
    config.vm.synced_folder "config", "/etc/psais", :mount_options => ["ro"]
    config.vm.synced_folder "../../code", "/opt/psais", :mount_options => ["ro"]
    
    config.vm.provision "shell", inline: "echo #{hostname} > /etc/hostname"
    config.vm.provision "shell", path: "../provisioning/provisioner.sh"
    
    if options["install_mapr"]
        config.vm.provision "shell", path: "../provisioning/provisioner-mapr.sh"
    end
    
    if options["install_spark"]
        config.vm.provision "shell", path: "../provisioning/provisioner-spark.sh"
    end
    
    config.vm.provider "virtualbox" do |vm|
        vm.memory = options["memory_gb"] * 1024
        vm.cpus = options["cpus"]
        
        unless File.exist?(extra_disk_image)
            vm.customize ["createhd", "--filename", extra_disk_image, "--size", extra_disk_size_gb * 1024] 
        end
        
        vm.customize ["storageattach", :id, "--storagectl", "SATA Controller", "--port", 1, "--device", 0, "--type", "hdd", "--medium", extra_disk_image]
    end
    
    config.vm.provider "vmware_fusion" do |vm|
        vm.memory = (options["memory_gb"] * 1024).to_s
    end
end
